{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\learn-js\\\\THForm\\\\quanlids\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport TodoList from './components/todoList/TodoList';\nimport TodoForm from './components/todoForm/TodoForm';\nimport PostFilterForm from './components/postFiltersForm/PostFilterForm';\nimport PostList from './components/postList/PostList';\nimport Pagination from './components/pagination/Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [todoList, setTodoList] = useState([{\n    id: 1,\n    name: 'Linh',\n    msv: '1821050435'\n  }, {\n    id: 2,\n    name: 'Thu',\n    msv: '1821050101'\n  }, {\n    id: 3,\n    name: 'Tường',\n    msv: '1821050678'\n  }]);\n  const [postList, setPostList] = useState([]);\n  const [pagination, setPagination] = useState({\n    _page: 1,\n    _limit: 10,\n    _totalRows: 1\n  });\n  const [filters, setFilters] = useState({\n    _limit: 10,\n    _page: 1,\n    title_like: ''\n  });\n  useEffect(() => {\n    async function fetchPostList() {\n      try {\n        const paramsString = queryString.stringify(filters);\n        const requestUrl = `http://js-post-api.herokuapp.com/api/posts?${paramsString}`;\n        const reponse = await fetch(requestUrl);\n        const reponseJSON = await reponse.json();\n        console.log({\n          reponseJSON\n        });\n        const {\n          data,\n          pagination\n        } = reponseJSON;\n        setPostList(data);\n        setPagination(pagination);\n      } catch (error) {\n        console.log('Failed: ', error.message);\n      }\n    }\n\n    fetchPostList();\n  }, [filters]);\n\n  function handlePageChange(newPage) {\n    console.log('new Page: ', newPage);\n    setFilters({ ...filters,\n      _page: newPage\n    });\n  }\n\n  function handleTodoClick(todo) {\n    console.log(todo);\n    const index = todoList.findIndex(x => x.id === todo.id);\n    if (index < 0) return;\n    const newTodoList = [...todoList];\n    newTodoList.splice(index, 1);\n    setTodoList(newTodoList);\n  }\n\n  function handleTodoSubmit(formValues) {\n    console.log('Form submit: ', formValues); // add new todo to current todo list\n\n    const newTodo = {\n      id: todoList.length + 1,\n      ...formValues\n    };\n    const newTodoList = [...todoList];\n    newTodoList.push(newTodo);\n    setTodoList(newTodoList);\n    localStorage.setItem('msv', newTodoList);\n  }\n\n  function handleFiltersChange(newFilters) {\n    console.log('new filters: ', newFilters);\n    setFilters({ ...filters,\n      _page: 1\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"DS SINH VI\\xCAN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      onSubmit: handleTodoSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(PostFilterForm, {\n      onsubmit: handleFiltersChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todoList,\n      onTodoClick: handleTodoClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(PostList, {\n      posts: postList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      pagination: pagination,\n      onPageChange: handlePageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"GYhMi8yMePr+HEpOZeoRz8YM0q0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/xampp/htdocs/learn-js/THForm/quanlids/src/App.js"],"names":["useState","useEffect","queryString","TodoList","TodoForm","PostFilterForm","PostList","Pagination","App","todoList","setTodoList","id","name","msv","postList","setPostList","pagination","setPagination","_page","_limit","_totalRows","filters","setFilters","title_like","fetchPostList","paramsString","stringify","requestUrl","reponse","fetch","reponseJSON","json","console","log","data","error","message","handlePageChange","newPage","handleTodoClick","todo","index","findIndex","x","newTodoList","splice","handleTodoSubmit","formValues","newTodo","length","push","localStorage","setItem","handleFiltersChange","newFilters"],"mappings":"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","sourcesContent":["\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport TodoList from './components/todoList/TodoList';\nimport TodoForm from './components/todoForm/TodoForm';\nimport PostFilterForm from './components/postFiltersForm/PostFilterForm';\nimport PostList from './components/postList/PostList';\nimport Pagination from './components/pagination/Pagination';\n\nfunction App() {\n  const [todoList, setTodoList]= useState([\n    {id: 1, name: 'Linh', msv: '1821050435'},\n    {id: 2, name: 'Thu', msv: '1821050101'},\n    {id: 3, name: 'Tường', msv: '1821050678'}\n  ]);\n\n  const [postList, setPostList] = useState([]);\n  const [pagination, setPagination] = useState({\n    _page : 1,\n    _limit: 10,\n    _totalRows: 1, \n  });\n\n  const [filters, setFilters] = useState({\n    _limit: 10,\n    _page: 1, \n    title_like: '',\n  });\n\n  useEffect(() => {\n    async function fetchPostList() {\n      try {\n        const paramsString = queryString.stringify(filters);\n\n        const requestUrl= `http://js-post-api.herokuapp.com/api/posts?${paramsString}`;\n        const reponse = await fetch(requestUrl);\n        const reponseJSON = await reponse.json();\n        console.log({reponseJSON});\n  \n        const {data, pagination} = reponseJSON;\n        setPostList(data);\n        setPagination(pagination);\n      } catch (error) {\n        console.log('Failed: ', error.message);\n      }\n     \n    }\n\n    fetchPostList();\n    \n  }, [filters]);\n\n  function handlePageChange(newPage) {\n    console.log('new Page: ', newPage);\n    setFilters({\n      ...filters,\n      _page: newPage,\n    });\n  }\n\n  function handleTodoClick(todo) {\n    console.log(todo);\n    const index = todoList.findIndex(x => x.id === todo.id);\n    if (index <0) return;\n\n    const newTodoList =[ ...todoList];\n    newTodoList.splice(index, 1);\n    setTodoList(newTodoList);\n    \n  }\n\n  function handleTodoSubmit(formValues) {\n    console.log('Form submit: ', formValues);\n     // add new todo to current todo list\n     const newTodo = {\n       id: todoList.length + 1,\n       ...formValues,\n     };\n     const newTodoList = [...todoList];\n     newTodoList.push(newTodo);\n     setTodoList(newTodoList);\n     localStorage.setItem('msv', newTodoList);\n\n  }\n\n  function handleFiltersChange(newFilters) {\n    console.log('new filters: ', newFilters);\n    setFilters({\n      ...filters,\n      _page: 1, \n    })\n  }\n  return (\n    <div className=\"App\">\n     <h1>DS SINH VIÊN</h1>\n    <TodoForm onSubmit={handleTodoSubmit}></TodoForm>\n    <PostFilterForm onsubmit={handleFiltersChange} ></PostFilterForm>\n     <TodoList todos={todoList} onTodoClick={handleTodoClick} />\n\n     <PostList posts= {postList} ></PostList>\n     <Pagination \n     pagination= {pagination}\n     onPageChange = {handlePageChange} ></Pagination>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}